@using TyzenR.Taskman.Entity
@using TyzenR.Taskman.Managers

@inject ITaskManager taskManager;
@inject IActionTrackerManager actionTrackerManager;
@inject IAppInfo appInfo;

<br />
<h4 style="color:darkgrey">Task History</h4>

@foreach (var action in actionModels)
{
    <div>
        <p>@action.Type</p>
    </div>
}

@code {
    private string taskId;

    [Parameter]
    public string TaskId
    {
        get { return taskId; }
        set { taskId = value; OnTaskIdChanged(); }
    }

    private IList<ActionModel> actionModels = new List<ActionModel>();

    private async Task OnTaskIdChanged()
    {
        await RefreshData();
    }

    private async Task RefreshData()
    {
        if (!string.IsNullOrEmpty(TaskId) && Guid.TryParse(TaskId, out _))
        {
            actionModels = await actionTrackerManager.GetActionsAsync(Guid.Parse(TaskId));
            StateHasChanged();
        }
    }
}
